c///////////////////////////////////////////////////////////////////////
c
c      Author:          M. Shiga
c      Last updated:    Dec 18, 2020 by M. Shiga
c      Description:     default values for input.dat
c
c///////////////////////////////////////////////////////////////////////

c=======================================================================
c     get_nprocs_2.F
c=======================================================================

c-----------------------------------------------------------------------
c     /*                                                              */
c     /*   Parallel parameters:                                       */
c     /*                                                              */
c     /*   np_beads is the number of beads computed in each cycle     */
c     /*   np_force is the parallel number for each bead              */
c     /*                                                              */
c     /*   Default:   np_beads = -1,  means min(nbead,nprocs)         */
c     /*              np_force = -1,  means (nprocs/np_beads)         */
c     /*                                                              */
c     /*   Either np_beads or no_force could be changed               */
c     /*   (when both are changed it goes back to default)            */
c     /*                                                              */
c     /*   when np_beads is changed it is assumed that                */
c     /*              np_force = nprocs / np_beads                    */
c     /*                                                              */
c     /*   when np_force is changed it is assumed that                */
c     /*              np_beads = nprocs / np_force                    */
c     /*                                                              */
c     /*   N = np_beads*np_force is processes used in each cycle      */
c     /*                                                              */
c     /*   Number of cycles = nbead/N + min(1,mod(nbead,N))           */
c     /*                                                              */
c     /*   Number of processes (nprocs) must be set equal to N        */
c     /*   (processes are fully used except for the last cycle)       */
c     /*                                                              */
c     /*   Thus, nprocs must be a multiple of np_beads and np_force   */
c     /*                                                              */
c     /*   Example: nbead=4 could be run with                         */
c     /*             nprocs  np_beads np_force                        */
c     /*                  8         4        2                        */
c     /*                  6         3        2                        */
c     /*                                                              */
c-----------------------------------------------------------------------

c-----------------------------------------------------------------------
c     /*   bead parallel parameter (-1: default)                      */
c-----------------------------------------------------------------------

<np_beads>
-1

c-----------------------------------------------------------------------
c     /*   force parallel parameter (-1: default)                     */
c-----------------------------------------------------------------------

<np_force>
-1

c=======================================================================
c     setparams.F
c=======================================================================

c-----------------------------------------------------------------------
c     /*                                                              */
c     /*   style in reading initial geometry                          */
c     /*                                                              */
c     /*      input_style = OLD:  read from centroid.dat.             */
c     /*      input_style = NEW:  read from structure.dat.            */
c     /*                                                              */
c-----------------------------------------------------------------------

<input_style>
NEW

c-----------------------------------------------------------------------
c     /*                                                              */
c     /*   calculational method                                       */
c     /*                                                              */
c     /*      method = STATIC       static.                           */
c     /*      method = TESTFORCE    test forces.                      */
c     /*      method = TESTVIRIAL   test virial.                      */
c     /*      method = GEOOPT       geometry optimization.            */
c     /*      method = NMA          normal mode analysis.             */
c     /*      method = SD           steepest descent.                 */
c     /*      method = BOXOPT       box optimization.                 */
c     /*      method = MD           classical molecular dynamics.     */
c     /*      method = PIMD         path integral md.                 */
c     /*      method = PIHMC        path integral hybrid monte carlo. */
c     /*      method = CMD          centroid md.                      */
c     /*      method = RPMD         ring polymer md.                  */
c     /*      method = MTD          metadynamics.                     */
c     /*      method = REHMC        replica exchange hmc.             */
c     /*      method = STRING       string method.                    */
c     /*      method = PHONON       phonon calculation.               */
c     /*      method = OMOPT        optimization of OM action.        */
c     /*      method = TESTOM       test OM force.                    */
c     /*                                                              */
c-----------------------------------------------------------------------

<method>
STATIC

c-----------------------------------------------------------------------
c     /*                                                              */
c     /*   statistical ensemble                                       */
c     /*                                                              */
c     /*      ensemble = NONE  not specified.                         */
c     /*      ensemble = NVE   constant volume and energy.            */
c     /*      ensemble = NVT   constant volume and temperature.       */
c     /*      ensemble = NPT   constant pressure and temperature      */
c     /*      ensemble = NTT   constant tension and temperature.      */
c     /*      ensemble = NPH   constant pressure and enthalpy.        */
c     /*      ensemble = NTH   constant tension and enthalpy.         */
c     /*                                                              */
c-----------------------------------------------------------------------

<ensemble>
NONE

c-----------------------------------------------------------------------
c     /*   number of atoms                                            */
c-----------------------------------------------------------------------

<natom>
0

c-----------------------------------------------------------------------
c     /*   number of atomic species                                   */
c-----------------------------------------------------------------------

<nspec>
0

c-----------------------------------------------------------------------
c     /*   number of beads                                            */
c-----------------------------------------------------------------------

<nbead>
1

c-----------------------------------------------------------------------
c     /*   multiple time step for harmonic forces                     */
c-----------------------------------------------------------------------

<nref>
1

c-----------------------------------------------------------------------
c     /*   multiple time step for thermostats                         */
c-----------------------------------------------------------------------

<nys>
5

c-----------------------------------------------------------------------
c     /*                                                              */
c     /*   type of thermostat                                         */
c     /*                                                              */
c     /*      bath_type = NONE   no thermostat.                       */
c     /*      bath_type = NHC    Nose-Hoover chain.                   */
c     /*      bath_type = NHCS   Nose-Hoover chains (multiple)        */
c     /*      bath_type = MNHC   massive Nose-Hoover chain.           */
c     /*                                                              */
c     /*   usage:                                                     */
c     /*                                                              */
c     /*      bath_type = MNHC for PIMD (NVT).                        */
c     /*      bath_type = MNHC for CMD.                               */
c     /*      bath_type = NONE for RPMD.                              */
c     /*                                                              */
c-----------------------------------------------------------------------

<bath_type>
NONE

c-----------------------------------------------------------------------
c     /*   multiplicity of massive Nose-Hoover chain thermostats      */
c-----------------------------------------------------------------------

<ncolor>
1

c-----------------------------------------------------------------------
c     /*   chain length of massive Nose-Hoover chain thermostat       */
c-----------------------------------------------------------------------

<nnhc>
4

c-----------------------------------------------------------------------
c     /*                                                              */
c     /*   type of potential model                                    */
c     /*                                                              */
c     /*      ipotential = ABINIT-MP   abinitmp 5.0. (embedded)       */
c     /*      ipotential = ABINIT-MP5  abinitmp 5.0. (system call)    */
c     /*      ipotential = EAM         eam.                           */
c     /*      ipotential = G03         gaussian 03.                   */
c     /*      ipotential = G98         gaussian 98.                   */
c     /*      ipotential = GAMESS      gamess.                        */
c     /*      ipotential = HARMONIC    harmonic potential.            */
c     /*      ipotential = MM          mm force field.                */
c     /*      ipotential = MOLPRO      molpro.                        */
c     /*      ipotential = MOPAC       mopac.                         */
c     /*      ipotential = ONIOM       oniom.                         */
c     /*      ipotential = ORCA        orca 3.0.     (system call)    */
c     /*      ipotential = QE          quantum espresso (embedded).   */
c     /*      ipotential = QMMM        qm/mm.                         */
c     /*      ipotential = SMASH       smash 2.2.0.                   */
c     /*      ipotential = SPLINE      spline function.               */
c     /*      ipotential = TURBOMOLE   turbomole.                     */
c     /*      ipotential = VASP        vasp 5.0.     (embedded)       */
c     /*      ipotential = VASP5       vasp 5.0.     (system call)    */
c     /*      ipotential = USER        user defined.                  */
c     /*      ipotential = WATER       water.                         */
c     /*                                                              */
c-----------------------------------------------------------------------

<ipotential>
not_available

c-----------------------------------------------------------------------
c     /*                                                              */
c     /*   QM potential model in QM/MM method                         */
c     /*                                                              */
c     /*      qmmm_potential = SMASH   smash 2.2.0.                   */
c     /*                                                              */
c-----------------------------------------------------------------------

<qmmm_potential>
SMASH

c-----------------------------------------------------------------------
c     /*                                                              */
c     /*   QM embedding model in QM/MM method                         */
c     /*                                                              */
c     /*      qmmm_embedding = EE      electronic embedding.          */
c     /*      qmmm_embedding = ME      mechanical embedding.          */
c     /*                                                              */
c-----------------------------------------------------------------------

<qmmm_embedding>
EE

c-----------------------------------------------------------------------
c     /*                                                              */
c     /*   High precision potential model in ONIOM method             */
c     /*                                                              */
c     /*      oniom_hi_potential = SMASH   smash 2.2.0.               */
c     /*                                                              */
c-----------------------------------------------------------------------

<oniom_hi_potential>
SMASH

c-----------------------------------------------------------------------
c     /*                                                              */
c     /*   Low precision potential model in ONIOM method              */
c     /*                                                              */
c     /*      oniom_lo_potential = MM      mm force field.            */
c     /*                                                              */
c-----------------------------------------------------------------------

<oniom_lo_potential>
MM

c-----------------------------------------------------------------------
c     /*   Select the new MPI scheme for BCMD, RPMD etc.              */
c-----------------------------------------------------------------------

<xmpi>
OFF

c=======================================================================
c     setup_me.F, setup_ee.F
c=======================================================================

c-----------------------------------------------------------------------
c     /*                                                              */
c     /*   input directory for QM calculations in QM/MM method        */
c     /*                                                              */
c-----------------------------------------------------------------------

<qmmm_dat_dir>
dat

c-----------------------------------------------------------------------
c     /*                                                              */
c     /*   scratch directory in QM/MM method                          */
c     /*                                                              */
c-----------------------------------------------------------------------

<qmmm_scr_dir>
scr

c-----------------------------------------------------------------------
c     /*   print interval: QM/MM energy contributions (qmmm.out)      */
c-----------------------------------------------------------------------

<iprint_qmmm>
1

c-----------------------------------------------------------------------
c     /*   charge variation of QM atoms in image cell (0: fixed)      */
c-----------------------------------------------------------------------

<ivar_qmmm>
0

c=======================================================================
c     setup_oniom.F
c=======================================================================

c-----------------------------------------------------------------------
c     /*                                                              */
c     /*   input directories in ONIOM method                          */
c     /*                                                              */
c-----------------------------------------------------------------------

<oniom_dat_dir>
dat_1 dat_2 dat_3

c-----------------------------------------------------------------------
c     /*                                                              */
c     /*   scratch directories in ONIOM method                        */
c     /*                                                              */
c-----------------------------------------------------------------------

<oniom_scr_dir>
scr_1 scr_2 scr_3

c-----------------------------------------------------------------------
c     /*   print interval: ONIOM energy contributions (qmmm.out)      */
c-----------------------------------------------------------------------

<iprint_oniom>
1

c=======================================================================
c     setcondition.F
c=======================================================================

c-----------------------------------------------------------------------
c     /*                                                              */
c     /*   translational and rotational corrections                   */
c     /*                                                              */
c     /*      itrans_start =  0 ... no translational correction       */
c     /*                   =  1 ... subtract at initial step          */
c     /*                   =  2 ... correct each time step            */
c     /*                                                              */
c     /*      irot_start   =  0 ... no rotational correction          */
c     /*                   =  1 ... subtract at initial step          */
c     /*                   =  2 ... correct each time step            */
c     /*                                                              */
c-----------------------------------------------------------------------

<corrections>
0  0

c-----------------------------------------------------------------------
c     /*   number of MD steps                                         */
c-----------------------------------------------------------------------

<nstep>
4

c-----------------------------------------------------------------------
c     /*   time step size in [fs]                                     */
c-----------------------------------------------------------------------

<dt>
0.25d0

c-----------------------------------------------------------------------
c     /*   temperature in [K]                                         */
c-----------------------------------------------------------------------

<temperature>
300.d0

c-----------------------------------------------------------------------
c     /*   pressure in [MPa]                                          */
c-----------------------------------------------------------------------

<pressure>
0.101325d0

c-----------------------------------------------------------------------
c     /*   characteristic time scale of thermostat [fs]               */
c-----------------------------------------------------------------------

<time_bath>
10.d0

c-----------------------------------------------------------------------
c     /*   characteristic time scale of barostat [fs]                 */
c-----------------------------------------------------------------------

<time_baro>
1000.d0

c-----------------------------------------------------------------------
c     /*   temperature for bead spread [K] (valid for initial run)    */
c-----------------------------------------------------------------------

<beadspread>
500.d0

c-----------------------------------------------------------------------
c     /*   PIMD execution command                                     */
c-----------------------------------------------------------------------

<pimd_command>
"pimd.x"

c=======================================================================
c     softexit.F
c=======================================================================

c-----------------------------------------------------------------------
c     /*   read interval of exit.dat                                  */
c-----------------------------------------------------------------------

<iread_exit>
10

c=======================================================================
c     standard.F
c=======================================================================

c-----------------------------------------------------------------------
c     /*   output interval: standard output (standard.out)            */
c-----------------------------------------------------------------------

<iprint_std>
1

c=======================================================================
c     gethess.F
c=======================================================================

c-----------------------------------------------------------------------
c     /*   output interval: hessian                                   */
c-----------------------------------------------------------------------

<iprint_hess>
1

c=======================================================================
c     analysis.F
c=======================================================================

c-----------------------------------------------------------------------
c     /*   output interval:  bond lengths (bond.out)                  */
c-----------------------------------------------------------------------

<iprint_bond>
-1

c-----------------------------------------------------------------------
c     /*   output interval:  radius of gyration (rgy.out)             */
c-----------------------------------------------------------------------

<iprint_rgy>
-1

c-----------------------------------------------------------------------
c     /*   output interval:  energy averages (eavg.out)               */
c-----------------------------------------------------------------------

<iprint_eavg>
-1

c-----------------------------------------------------------------------
c     /*   output interval:  radial distributions (rdf.out)           */
c-----------------------------------------------------------------------

<iprint_rdf>
-1

c-----------------------------------------------------------------------
c     /*   output interval:  radial distributions of centroid         */
c     /*   (rdf_cent.out) calculated as the mean of the distance      */
c     /*   between atoms in all beads in the frame                    */
c-----------------------------------------------------------------------

<iprint_rdfcent>
-1

c-----------------------------------------------------------------------
c     /*   output interval:  radial distributions                     */
c     /*   of each bead (rdf_bead.out)                                */
c-----------------------------------------------------------------------

<iprint_rdfbead>
-1

c-----------------------------------------------------------------------
c     /*   output interval:  trajectory in regular format             */
c-----------------------------------------------------------------------

<iprint_trj>
-1

c-----------------------------------------------------------------------
c     /*                                                              */
c     /*   format for trajectory output                               */
c     /*                                                              */
c     /*   iformat_trj = 1  double precision                          */
c     /*               = 2  single presision                          */
c     /*                                                              */
c-----------------------------------------------------------------------

<iformat_trj>
1

c-----------------------------------------------------------------------
c     /*   output interval:  xyz file (trj.xyz)                       */
c-----------------------------------------------------------------------

<iprint_xyz>
-1

c-----------------------------------------------------------------------
c     /*   output interval:  xsf file (trj.xsf)                       */
c-----------------------------------------------------------------------

<iprint_xsf>
-1

c-----------------------------------------------------------------------
c     /*   output interval:  xsf file (trj.xsf)                       */
c-----------------------------------------------------------------------

<iprint_dcd>
-1


c-----------------------------------------------------------------------
c     /*   output interval:  box trajectory (box.out)                 */
c-----------------------------------------------------------------------

<iprint_box>
-1

c-----------------------------------------------------------------------
c     /*                                                              */
c     /*    format of xyz file                                        */
c     /*                                                              */
c     /*       iformat_xyz = 1  each bead separately                  */
c     /*                   = 2  all beads together                    */
c     /*                   = 3  centroid only                         */
c     /*                                                              */
c-----------------------------------------------------------------------

<iformat_xyz>
2

c-----------------------------------------------------------------------
c     /*                                                              */
c     /*    first species and last species to be printed in xyz file  */
c     /*                                                              */
c     /*       ikind_xyz  =  1  first species                         */
c     /*                  =  2  second species                        */
c     /*                  = -1  last species                          */
c     /*                                                              */
c-----------------------------------------------------------------------

<ikind_xyz>
1 -1

c-----------------------------------------------------------------------
c     /*   output interval:  dipole moment ( dipole.out)              */
c-----------------------------------------------------------------------

<iprint_dip>
-1

c-----------------------------------------------------------------------
c     /*   output interval:  linear/angular momentum (momentum.out)   */
c-----------------------------------------------------------------------

<iprint_mom>
-1

c-----------------------------------------------------------------------
c     /*   output interval:  update restart files (*.ini)             */
c-----------------------------------------------------------------------

<iprint_rest>
10

c-----------------------------------------------------------------------
c     /*                                                              */
c     /*   radial distributions (rdf.out)                             */
c     /*                                                              */
c     /*      lower bound, upper bound, increment in [bohr]           */
c     /*                                                              */
c-----------------------------------------------------------------------

<params_rdf>
1.d0  20.d0  0.01d0

c-----------------------------------------------------------------------
c     /*                                                              */
c     /*   atomic kinetic energy                                      */
c     /*                                                              */
c-----------------------------------------------------------------------

<iprint_akin>
-1

c-----------------------------------------------------------------------
c     /*                                                              */
c     /*   heat capacity                                              */
c     /*                                                              */
c-----------------------------------------------------------------------

<iprint_cavg>
-1

c=======================================================================
c     analysis_string.F
c=======================================================================

c-----------------------------------------------------------------------
c     /*   output interval:  string.xyz, string_pot.out               */
c-----------------------------------------------------------------------

<iprint_str>
1

c=======================================================================
c     boundary.F
c=======================================================================

c-----------------------------------------------------------------------
c     /*                                                              */
c     /*   boundary condition                                         */
c     /*                                                              */
c     /*      iboundary = 0  free                                     */
c     /*                = 1  periodic                                 */
c     /*                                                              */
c     /*   for periodic boundary, the box matrix is provided          */
c     /*                                                              */
c     /*              ( ax, bx, cx )                                  */
c     /*      H  =    ( ay, by, cy )                                  */
c     /*              ( az, bz, cz )                                  */
c     /*                                                              */
c     /*   where a, b, c are lattice vectors of the box               */
c     /*                                                              */
c-----------------------------------------------------------------------

<iboundary>
0

c=======================================================================
c     setup_pimd.F, etc.
c=======================================================================

<time_mode>
-1.d0

c=======================================================================
c     force_g16.F
c=======================================================================

c-----------------------------------------------------------------------
c     /*   g16 command                                                */
c-----------------------------------------------------------------------

<g16_command>
'g16'
'formchk'

c-----------------------------------------------------------------------
c     /*   g16 gradient                                               */
c-----------------------------------------------------------------------

<g16_grad>
1

c-----------------------------------------------------------------------
c     /*   g16 oniom                                                  */
c-----------------------------------------------------------------------

<g16_oniom>
0

c-----------------------------------------------------------------------
c     /*   g16 dipole                                                 */
c-----------------------------------------------------------------------

<g16_dip>
1

c=======================================================================
c     force_g09.F
c=======================================================================

c-----------------------------------------------------------------------
c     /*   g09 command                                                */
c-----------------------------------------------------------------------

<g09_command>
'g09'
'formchk'

c-----------------------------------------------------------------------
c     /*   g09 gradient                                               */
c-----------------------------------------------------------------------

<g09_grad>
1

c-----------------------------------------------------------------------
c     /*   g09 oniom                                                  */
c-----------------------------------------------------------------------

<g09_oniom>
0

c-----------------------------------------------------------------------
c     /*   g09 dipole                                                 */
c-----------------------------------------------------------------------

<g09_dip>
1

c=======================================================================
c     force_g03.F
c=======================================================================

c-----------------------------------------------------------------------
c     /*   g03 command                                                */
c-----------------------------------------------------------------------

<g03_command>
'g03'
'formchk'

c-----------------------------------------------------------------------
c     /*   g03 gradient                                               */
c-----------------------------------------------------------------------

<g03_grad>
1

c-----------------------------------------------------------------------
c     /*   g03 dipole                                                 */
c-----------------------------------------------------------------------

<g03_dip>
1

c=======================================================================
c     force_g98.F
c=======================================================================

c-----------------------------------------------------------------------
c     /*   g98 command                                                */
c-----------------------------------------------------------------------

<g98_command>
'g98'
'formchk'

c-----------------------------------------------------------------------
c     /*   g98 gradient                                               */
c-----------------------------------------------------------------------

<g98_grad>
1

c-----------------------------------------------------------------------
c     /*   g98 dipole                                                 */
c-----------------------------------------------------------------------

<g98_dip>
1

c=======================================================================
c     force_mopac.F
c=======================================================================

c-----------------------------------------------------------------------
c     /*   mopac command                                              */
c-----------------------------------------------------------------------

<mopac_command>
'nohup /opt/mopac/mopac/MOPAC2007.out'

c=======================================================================
c     force_turbo.F
c=======================================================================

c-----------------------------------------------------------------------
c     /*   turbomole commands                                         */
c-----------------------------------------------------------------------

<turbo_command>
      dscf   control.1
      grad   control.2

c-----------------------------------------------------------------------
c     /*                                                              */
c     /*   turbomole guess option                                     */
c     /*                                                              */
c     /*   turbo_guess = PREVIOUS : mo's from previous step           */
c     /*               = PULAY : Pulay's fourth order extrapolation   */
c     /*               = KOLAFA : Kolafa's sixth order extrapolation  */
c     /*                                                              */
c-----------------------------------------------------------------------

<turbo_guess>
1

c=======================================================================
c     lbfgscycle.F
c=======================================================================

c-----------------------------------------------------------------------
c     /*                                                              */
c     /*   convergence criteria for limited memory BFGS method        */
c     /*                                                              */
c     /*      rms displacement, max displacement,                     */
c     /*      rms gradient, max gradient                              */
c     /*                                                              */
c-----------------------------------------------------------------------

<params_lbfgs>
  1.d-4,  1.d-5,  1.d-5,  1.d-6

c=======================================================================
c     random.F
c=======================================================================

c-----------------------------------------------------------------------
c     /*                                                              */
c     /*   option for random number generator                         */
c     /*                                                              */
c     /*       irandom = 0   seed is zero.                            */
c     /*               = 1   seed is at random.                       */
c     /*                                                              */
c-----------------------------------------------------------------------

<irandom>
0

c=======================================================================
c     force_mech.F
c=======================================================================
c-----------------------------------------------------------------------
c     /*                                                              */
c     /*   atom_change : change atomic mass                           */
c     /*                                                              */
c     /*   line  1:       number of lines (n) to be followed          */
c     /*   lines 2-(n+1): change type (+parameters)                   */
c     /*                                                              */
c     /*      FREEZE    (first atom) (last atom)                      */
c     /*      HYDROGEN  (first atom) (last atom)                      */
c     /*                                                              */
c-----------------------------------------------------------------------

<atom_change>
0

c-----------------------------------------------------------------------
c     /*                                                              */
c     /*   mech_type : mechanochemistry                               */
c     /*                                                              */
c     /*      mech_type = NONE:  no external force.                   */
c     /*      mech_type = EFEI:  external force explicitly included.  */
c     /*      mech_type = CLUSTER:  cluster boundary condition.       */
c     /*                                                              */
c-----------------------------------------------------------------------

<mech_type>
NONE

c-----------------------------------------------------------------------
c     /*                                                              */
c     /*   For mech_type = EFEI                                       */
c     /*                                                              */
c     /*      atom 1, atom 2, force [au]                              */
c     /*                                                              */
c-----------------------------------------------------------------------

<efei>
not_available

c-----------------------------------------------------------------------
c     /*                                                              */
c     /*   For mech_type = CLUSTER                                    */
c     /*                                                              */
c     /*      distance from center of mass [au], force constant [au]  */
c     /*                                                              */
c-----------------------------------------------------------------------

<cluster>
not_available

c-----------------------------------------------------------------------
c     /*   print interval of energy components (mech.out)             */
c-----------------------------------------------------------------------

<iprint_mech>
1

c=======================================================================
c     testforce.F, testvirial.F, freq.F, boxopt.F
c=======================================================================

c-----------------------------------------------------------------------
c     /*   finite difference shift parameter                          */
c-----------------------------------------------------------------------

<fdiff>
1.d-4

c=======================================================================
c     force_gamess.F
c=======================================================================

c-----------------------------------------------------------------------
c     /*   gamess execution command                                   */
c-----------------------------------------------------------------------

<gamess_command>
'rungms gamess 00 1'

c=======================================================================
c     force_orca.F
c=======================================================================

c-----------------------------------------------------------------------
c     /*   orca execution command                                     */
c-----------------------------------------------------------------------

<orca_command>
'orca'

c=======================================================================
c     metacycle.F / pimd_hills.F
c=======================================================================

c-----------------------------------------------------------------------
c   /*   maximum number of gaussians                                  */
c-----------------------------------------------------------------------

<mg_meta>
50000

c-----------------------------------------------------------------------
c   /*                                                                */
c   /*   parameters of collective variables                           */
c   /*                                                                */
c   /*      1st line:  number of collective variables                 */
c   /*      2nd line:  type and parameters for the 1st cv             */
c   /*      3rd line:  type and parameters for the 2nd cv             */
c   /*      nth line:  type and parameters for the (n-1)th cv         */
c   /*                                                                */
c   /*      type 1:  bond distance                                    */
c   /*               1, atom #1, atom #2                              */
c   /*                                                                */
c   /*      type 2:  bond angle                                       */
c   /*               2, atom #1, atom #2, atom #3                     */
c   /*                                                                */
c   /*      type 3:  dihedral angle                                   */
c   /*               3, atom #1, atom #2, atom #3, atom #4            */
c   /*                                                                */
c   /*      type 4:  bond difference                                  */
c   /*               4, atom #1, atom #2, atom #3                     */
c   /*                                                                */
c   /*      type 5:  coordination number                              */
c   /*               5, spec #1, spec #2, mu, nu, distance [bohr]     */
c   /*                                                                */
c-----------------------------------------------------------------------

<nmeta>
not_available

c-----------------------------------------------------------------------
c   /*   number of reference steps for harmonic potential             */
c-----------------------------------------------------------------------

<nref_meta>
10

c-----------------------------------------------------------------------
c   /*   gaussian height [kelvin]                                     */
c-----------------------------------------------------------------------

<gh_meta>
150.d0

c-----------------------------------------------------------------------
c   /*                                                                */
c   /*   gaussian width                                               */
c   /*                                                                */
c   /*      type 1:  bond distance,   width [bohr]                    */
c   /*      type 2:  bond angle,      width [deg]                     */
c   /*      type 3:  dihedral angle,  width [deg]                     */
c   /*      type 4:  bond difference, width [bohr]                    */
c   /*      type 5:  coordination,    width [no unit]                 */
c   /*                                                                */
c-----------------------------------------------------------------------

<gw_meta>
DIST    0.100d0
ANGL    5.000d0
DIH    10.000d0
DIFF    0.100d0
CN      0.100d0
DCN     0.100d0
XYZ     0.100d0
DXYZ    0.100d0

c-----------------------------------------------------------------------
c   /*                                                                */
c   /*   time scale of diffusion of collective variables [fs]         */
c   /*                                                                */
c   /*     = time scale of adding new gaussian                        */
c   /*                                                                */
c   /*   the mass of fictitious particle is set by                    */
c   /*                                                                */
c   /*     fictmass_meta = t_cv_meta**2 / (1.5*gw_meta)**2 / beta     */
c   /*                                                                */
c-----------------------------------------------------------------------

<time_cv_meta>
75.0

c-----------------------------------------------------------------------
c   /*                                                                */
c   /*   time scale of oscillation of collective variables [fs]       */
c   /*                                                                */
c   /*     = period of oscillation for the harmonic term              */
c   /*                                                                */
c   /*     fc_meta = 4 * pi**2 * fictmass_meta / time_fc_meta**2      */
c   /*                                                                */
c   /*   note:  set nref_meta such that                               */
c   /*                                                                */
c   /*     dt/nref_meta * 100 > time_fc_meta                          */
c   /*                                                                */
c-----------------------------------------------------------------------

<time_fc_meta>
30.d0

c-----------------------------------------------------------------------
c   /*                                                                */
c   /*   time limit of adding a new hill [fs]                         */
c   /*                                                                */
c   /*     note:  set time_limit_meta at least more than three times  */
c   /*            as large as time_cv_meta                            */
c   /*                                                                */
c-----------------------------------------------------------------------

<time_limit_meta>
225.0

c-----------------------------------------------------------------------
c   /*                                                                */
c   /*   characteristic time scale of cv thermostat [fs]              */
c   /*                                                                */
c   /*     note:  this must be large enough                           */
c   /*                                                                */
c-----------------------------------------------------------------------

<time_cv_bath>
1000.d0

c-----------------------------------------------------------------------
c   /*   print interval:  energy components                           */
c-----------------------------------------------------------------------

<iprint_meta>
1

c-----------------------------------------------------------------------
c   /*   print interval:  hills reconstruction                        */
c-----------------------------------------------------------------------

<iprint_rec_meta>
100

c-----------------------------------------------------------------------
c   /*   print interval:  cv trajectory                               */
c-----------------------------------------------------------------------

<iprint_cv_meta>
1

c-----------------------------------------------------------------------
c   /*                                                                */
c   /*   parameters for hills reconstruction                          */
c   /*                                                                */
c   /*      type 1:  min, max, mesh of bond distance   [bohr]         */
c   /*      type 2:  min, max, mesh of bond angle      [deg]          */
c   /*      type 3:  min, max, mesh of dihedral angle  [deg]          */
c   /*      type 4:  min, max, mesh of bond difference [bohr]         */
c   /*      type 5:  min, max, mesh of coordination    [no unit]      */
c   /*                                                                */
c-----------------------------------------------------------------------

<params_rec_meta>
DIST   2.0    5.0   0.1
ANGL   0.0  180.0   6.0
DIH    0.0  360.0  12.0
DIFF  -3.0    3.0   0.2
CN     0.0    3.0   0.1
DCN   -2.0    2.0   0.1
XYZ    2.0    5.0   0.1
DXYZ   2.0    5.0   0.1

c-----------------------------------------------------------------------
c   /*                                                                */
c   /*   addition of hills in multiple walker metadynamics            */
c   /*                                                                */
c   /*       ioption = 0   simply add for all walkers                 */
c   /*       ioption = 1   choose walkers that are well separated     */
c   /*                                                                */
c-----------------------------------------------------------------------

<ioption_meta>
1

c-----------------------------------------------------------------------
c   /*                                                                */
c   /*   addition of new hills in metadynamics                        */
c   /*                                                                */
c   /*       ioption = 0   add gaussian when walker is displaced      */
c   /*       ioption = 1   add gaussian with equal timing             */
c   /*                                                                */
c-----------------------------------------------------------------------

<joption_meta>
0

c-----------------------------------------------------------------------
c   /*                                                                */
c   /*   cut off parameter in hill reconstruction of 3D metadynamics  */
c   /*                                                                */
c-----------------------------------------------------------------------

<cut_rec_3d>
100.d0

c-----------------------------------------------------------------------
c   /*                                                                */
c   /*   reference temperature of metadynamics in kelvin              */
c   /*                                                                */
c   /*      dtemp_meta = 0.0       conventional metadynamics          */
c   /*      dtemp_meta = nonzero   well tempered metadynamics         */
c   /*                                                                */
c   /*   this is the only option in well tempered metadynamics        */
c   /*                                                                */
c-----------------------------------------------------------------------

<dtemp_meta>
0.d0

c=======================================================================
c     force_water.F
c=======================================================================

c-----------------------------------------------------------------------
c     /*                                                              */
c     /*   water model:                                               */
c     /*                                                              */
c     /*   model_water = 1  spc/f                                     */
c     /*               = 2  rwk                                       */
c     /*                                                              */
c-----------------------------------------------------------------------

<model_water>
1

c=======================================================================
c     force_best.F
c=======================================================================

c-----------------------------------------------------------------------
c     /*                                                              */
c     /*   best method                                                */
c     /*                                                              */
c     /*   ioption_best =         0 : off                             */
c     /*   ioption_best =         1 : on                              */
c     /*                                                              */
c-----------------------------------------------------------------------

<ioption_best>
0

c-----------------------------------------------------------------------
c     /*   iobest = solute (central atom) in best method              */
c-----------------------------------------------------------------------

<iobest>
0

c-----------------------------------------------------------------------
c     /*   iobest = solvent (common species) in best method           */
c-----------------------------------------------------------------------

<ikind_best>
1

c-----------------------------------------------------------------------
c     /*   force constant in best method in hartree/bohr**2           */
c-----------------------------------------------------------------------

<fc_best>
25.0

c-----------------------------------------------------------------------
c     /*   cut off energy in hartree                                  */
c-----------------------------------------------------------------------

<eps_best>
1.d-16

c-----------------------------------------------------------------------
c     /*   print interval for best                                    */
c-----------------------------------------------------------------------

<iprint_best>
1

c=======================================================================
c     force_vasp.F
c=======================================================================

c-----------------------------------------------------------------------
c     /*   VASP output file options                                   */
c-----------------------------------------------------------------------

<vasp_output>
0   1

c-----------------------------------------------------------------------
c     /*   if 1, MO of previous step is used as initial guess         */
c-----------------------------------------------------------------------

<vasp_reuse_wavefunction>
1

c=======================================================================
c     force_vasp5.F
c=======================================================================

c-----------------------------------------------------------------------
c     /*   VASP command                                               */
c-----------------------------------------------------------------------

<vasp_command>
'mpirun -np 4 vasp > output.vasp'

c-----------------------------------------------------------------------
c     /*   VASP energy keyword, line, column                          */
c-----------------------------------------------------------------------

<vasp_keyword_energy>
'FREE ENERGIE OF THE ION-ELECTRON SYSTEM (eV)',  2,  5

c-----------------------------------------------------------------------
c     /*   VASP energy gradient keyword, line, column                 */
c-----------------------------------------------------------------------

<vasp_keyword_gradient>
'POSITION                                       TOTAL-FORCE (eV/Angst)',  2,  4

c-----------------------------------------------------------------------
c     /*   VASP energy stress keyword, line, column                   */
c-----------------------------------------------------------------------

<vasp_keyword_stress>
'FORCE on cell =-STRESS in cart. coord.  units (eV):',  14,  3

c=======================================================================
c     force_vasp6_MPI.F
c=======================================================================

c-----------------------------------------------------------------------
c     /*   VASP energy, either FREE_ENERGY or EXTRAPOLATED            */
c     /*   Determines if the energy should be taken as the            */
c     /*   free energy or the energy with sigma extrapolated to zero  */
c     
c     /*   Energy inside PIMD corresponds to in OUTCAR                */
c     /*   FREE_ENERGY  => "free energy    TOTEN"                     */
c     /*   EXTRAPOLATED => "energy(sigma->0)"                         */
c-----------------------------------------------------------------------
<vasp_energy>
FREE_ENERGY

c=======================================================================
c     force_molpro.F
c=======================================================================

c-----------------------------------------------------------------------
c     /*   molpro command                                             */
c-----------------------------------------------------------------------

<molpro_command>
'molpro'

c=======================================================================
c     force_dftb.F
c=======================================================================

c-----------------------------------------------------------------------
c     /*   dftb command                                               */
c-----------------------------------------------------------------------

<dftb_exe_command>
'dftb+'

c-----------------------------------------------------------------------
c     /*   dftb+ version: 19.1 or 18.2                                */
c-----------------------------------------------------------------------

<dftb_version>
'19.1'

c-----------------------------------------------------------------------
c     /*   How much should dftb+P output, -1 no files,                */
c     /*   0 one file for bead 1, 1 one file for each bead            */
c-----------------------------------------------------------------------
<dftb_lib_output>
0

c=======================================================================
c     force_libcp2k.F
c=======================================================================

c-----------------------------------------------------------------------
c     /*    output options for the lib version of CP2K                */
c     /*    -1 no output from CP2K, 0 only bead one produces output   */
C     /*    1 all beads produce output files                          */
c-----------------------------------------------------------------------

<cp2k_lib_output>
1

c-----------------------------------------------------------------------
c     /*  How often should gradients and stress tensors be calculated */
c     /*  This should always be set to 1 for PIMD, MD and related     */
c     /*  methods. For HMC for instance it can safely be turned off   */
c     /*  by setting -1, i.e. never calculate                         */
c-----------------------------------------------------------------------

<cp2k_lib_calcforce>
1

c-----------------------------------------------------------------------
c     /*  If you want the Mulliken and Hirshfeld charges output       */
c     /*  from cp2k then set this flag to 1                           */
c-----------------------------------------------------------------------

<cp2k_lib_chargeout>
-1

c=======================================================================
c     force_abinit_mp4.F,  force_abinit_mp5.F
c=======================================================================

c-----------------------------------------------------------------------
c     /*   abinit_mp command                                          */
c-----------------------------------------------------------------------

<abinit_mp_exe_command>
'abinitmp'

c=======================================================================
c     force_abinit_mp.F
c=======================================================================

c-----------------------------------------------------------------------
c     /*   abinit_mp input file                                       */
c-----------------------------------------------------------------------

<abinit_mp_input>
'input.ajf'

c-----------------------------------------------------------------------
c     /*   abinit_mp output file                                      */
c-----------------------------------------------------------------------

<abinit_mp_output>
'output.abi'   0   1

c-----------------------------------------------------------------------
c     /*   if 1, MO of previous step is used as initial guess         */
c-----------------------------------------------------------------------

<abinit_mp_reuse_mo>
1   0   0

c=======================================================================
c     setup_tfs.F,  setup_mfe.F
c=======================================================================

c-----------------------------------------------------------------------
c     /*   number of states                                           */
c-----------------------------------------------------------------------

<nstate>
1

c-----------------------------------------------------------------------
c     /*   initial state number                                       */
c-----------------------------------------------------------------------

<istate_init>
1

c-----------------------------------------------------------------------
c     /*   output interval:  tully' fewest switches (tfs.out)         */
c-----------------------------------------------------------------------

<iprint_tfs>
1

c-----------------------------------------------------------------------
c     /*   output interval:  mean field ehrenfest (mfe.out)           */
c-----------------------------------------------------------------------

<iprint_mfe>
1

c-----------------------------------------------------------------------
c     /*   output interval:  nonadiabatic coupling (nac.out)          */
c-----------------------------------------------------------------------

<iprint_nac>
1

c=======================================================================
c     setup_pihmc.F
c=======================================================================

c-----------------------------------------------------------------------
c     /*                                                              */
c     /*   Suzuki-Trotter expansion                                   */
c     /*                                                              */
c     /*     iorder_hmc = 2   second order                            */
c     /*     iorder_hmc = 4   fourth order                            */
c     /*                                                              */
c-----------------------------------------------------------------------

<iorder_hmc>
2

c=======================================================================
c     setup_pihmc.F, setup_rehmc.F
c=======================================================================

c-----------------------------------------------------------------------
c     /*   interval of adjusting number of md steps per mc cycle      */
c-----------------------------------------------------------------------

<istep_adjust_hmc>
-1

c-----------------------------------------------------------------------
c     /*   (minimum) number of md steps per mc cycle                  */
c-----------------------------------------------------------------------

<istep_hmc>
2

c-----------------------------------------------------------------------
c     /*   maximum number of md steps per mc cycle                    */
c-----------------------------------------------------------------------

<istep_max_hmc>
128

c-----------------------------------------------------------------------
c     /*   magnifying factor of md steps per mc cycle                 */
c-----------------------------------------------------------------------

<istep_mul_hmc>
2

c-----------------------------------------------------------------------
c     /*   lower bound of target acceptance ratio                     */
c-----------------------------------------------------------------------

<ratio_min_hmc>
0.05

c-----------------------------------------------------------------------
c     /*   upper bound of target acceptance ratio                     */
c-----------------------------------------------------------------------

<ratio_max_hmc>
0.20

c=======================================================================
c     setup_dual.F
c=======================================================================

c-----------------------------------------------------------------------
c     /*   methods     of high and low levels                         */
c-----------------------------------------------------------------------

<dual_potential>
MM  MM

c-----------------------------------------------------------------------
c     /*   data directories of high and low levels                    */
c-----------------------------------------------------------------------

<dual_dat_dir>
dat_hi dat_lo

c-----------------------------------------------------------------------
c     /*   scratch directories of high and low levels                 */
c-----------------------------------------------------------------------

<dual_scr_dir>
scr_hi scr_lo

c-----------------------------------------------------------------------
c     /*   print interval: energy components (dual.out)               */
c-----------------------------------------------------------------------

<iprint_dual>
1

c-----------------------------------------------------------------------
c     /*   parameters (lambda and cutoff)                             */
c-----------------------------------------------------------------------

<params_dual>
1.0   0.0

c=======================================================================
c     setup_nph.F, setup_npt.F, setup_nth.F, setup_ntt.F
c=======================================================================

c-----------------------------------------------------------------------
c     /*                                                              */
c     /*   nph_type: type of flexible box for NPH ensemble            */
c     /*                                                              */
c     /*     = CUBIC1  cubic box (Andersen)                           */
c     /*     = CUBIC2  cubic box (Martyna-Tuckerman-Klein)            */
c     /*     = PPHEX   parallel piped hexagonal (Parrinello-Rahman)   */
c     /*                                                              */
c-----------------------------------------------------------------------

<nph_type>
CUBIC2

c-----------------------------------------------------------------------
c     /*                                                              */
c     /*   npt_type: type of flexible box for NPT ensemble            */
c     /*                                                              */
c     /*     = CUBIC1  cubic box (Andersen)                           */
c     /*     = CUBIC2  cubic box (Martyna-Tuckerman-Klein)            */
c     /*     = PPHEX   parallel piped hexagonal (Parrinello-Rahman)   */
c     /*                                                              */
c-----------------------------------------------------------------------

<npt_type>
CUBIC2

c-----------------------------------------------------------------------
c     /*                                                              */
c     /*   nth_type: type of flexible box for NtH ensemble            */
c     /*                                                              */
c     /*     = CUBIC1  cubic box (Andersen)                           */
c     /*     = CUBIC2  cubic box (Martyna-Tuckerman-Klein)            */
c     /*     = PPHEX   parallel piped hexagonal (Parrinello-Rahman)   */
c     /*                                                              */
c-----------------------------------------------------------------------

<nth_type>
PPHEX

c-----------------------------------------------------------------------
c     /*                                                              */
c     /*   ntt_type: type of flexible box for NtT ensemble            */
c     /*                                                              */
c     /*     = CUBIC1  cubic box (Andersen)                           */
c     /*     = CUBIC2  cubic box (Martyna-Tuckerman-Klein)            */
c     /*     = PPHEX   parallel piped hexagonal (Parrinello-Rahman)   */
c     /*                                                              */
c-----------------------------------------------------------------------

<ntt_type>
PPHEX

c-----------------------------------------------------------------------
c     /*   tension for NtH and NtT ensembles                          */
c-----------------------------------------------------------------------

<tension>
  0.d0  0.d0  0.d0
  0.d0  0.d0  0.d0
  0.d0  0.d0  0.d0

c=======================================================================
c     phonon.F
c=======================================================================

c-----------------------------------------------------------------------
c     /*   number of primitive cells per supercell                    */
c-----------------------------------------------------------------------

<cells_phonon>
1 1 1

c-----------------------------------------------------------------------
c     /*   k-points for phonon dispersion                             */
c-----------------------------------------------------------------------

<kdisp_phonon>
1
0.0 0.0 0.0

c-----------------------------------------------------------------------
c     /*   k-point sampling for phonon density of states              */
c-----------------------------------------------------------------------

<kdos_phonon>
1 1 1

c-----------------------------------------------------------------------
c     /*   phonon dos range                                           */
c-----------------------------------------------------------------------

<dosrange_phonon>
0.0 5000.0 5.0

c-----------------------------------------------------------------------
c     /*   temperature range for phonon energies                      */
c-----------------------------------------------------------------------

<temprange_phonon>
0.0 3000.0 10.0

c=======================================================================
c     setup_cmd.F
c=======================================================================

c-----------------------------------------------------------------------
c     /*   adiabaticity parameter for cmd                             */
c-----------------------------------------------------------------------

<igamma>
10

c=======================================================================
c     setup_rehmc.F
c=======================================================================

c-----------------------------------------------------------------------
c     /*                                                              */
c     /*   type of replica exchange method                            */
c     /*                                                              */
c     /*      irem_type = T    no exchange between temperatures       */
c     /*      irem_type = TX   allow exchanges between temperatures   */
c     /*      irem_type = HX   hamiltonian exchanges for alchemistry  */
c     /*                                                              */
c-----------------------------------------------------------------------

<irem_type>
TX

c-----------------------------------------------------------------------
c     /*   minimum and maximum temperatures in TP or TX               */
c-----------------------------------------------------------------------

<temprange_rem>
300.d0 1000.d0

c=======================================================================
c     setup_alchem.F
c=======================================================================

c-----------------------------------------------------------------------
c     /*   alchemical potentials                                      */
c-----------------------------------------------------------------------

<alchem_potential>
MM MM

c-----------------------------------------------------------------------
c     /*   input directories for alchemical potentials                */
c-----------------------------------------------------------------------

<alchem_dat_dir>
alchem_1 alchem_2

c-----------------------------------------------------------------------
c     /*   scratch directories for alchemical potentials              */
c-----------------------------------------------------------------------

<alchem_scr_dir>
scr_1 scr_2

c=======================================================================
c     setup_string.F
c=======================================================================

c-----------------------------------------------------------------------
c     /*   both ends in string method FREE or FIXED.                  */
c-----------------------------------------------------------------------

<ends_string>
FIXED

c-----------------------------------------------------------------------
c     /*   grid parameter in string method                            */
c-----------------------------------------------------------------------

<ngrid_string>
11

c-----------------------------------------------------------------------
c     /*   automatic step control in string method, ON or OFF.        */
c-----------------------------------------------------------------------

<auto_string>
ON

c=======================================================================
c     analysis_rehmc.F
c=======================================================================

<iprint_alc>
1

c=======================================================================
c     force_smash.F (#ifdef smash: with direct link to smash)
c=======================================================================

c-----------------------------------------------------------------------
c     /*   smash_options: smash standard input (without geometry)     */
c-----------------------------------------------------------------------

<smash_options>
job method=hf basis=6-31g(d) memory=1gb charge=0
control iprint=1

c-----------------------------------------------------------------------
c     /*                                                              */
c     /*   smash guess option                                         */
c     /*                                                              */
c     /*   smash_guess = PREVIOUS : mo's from previous step           */
c     /*               = PULAY : Pulay's fourth order extrapolation   */
c     /*               = KOLAFA : Kolafa's sixth order extrapolation  */
c     /*                                                              */
c-----------------------------------------------------------------------

<smash_guess>
PREVIOUS

c=======================================================================
c     force_smash.F (#ifndef smash: without direct link to smash)
c=======================================================================

c-----------------------------------------------------------------------
c     /*    smash execution command                                  */
c-----------------------------------------------------------------------

<smash_command>
'smash'

c-----------------------------------------------------------------------
c     /*    option for the gradient (forces) calculation              */
c     /*                                                              */
c     /*   smash_grad  = 1      : ON                                  */
c     /*               = 0      : OFF                                 */
c     /*                                                              */
c-----------------------------------------------------------------------

<smash_grad>
1

c-----------------------------------------------------------------------
c     /*    option for the dipole moment calculation                  */
c     /*                                                              */
c     /*   smash_dip   = 1      : ON                                  */
c     /*               = 0      : OFF                                 */
c     /*                                                              */
c-----------------------------------------------------------------------

<smash_dip>
1

c-----------------------------------------------------------------------
c     /*    number of treads for smash calculation                    */
c-----------------------------------------------------------------------

<smash_threads>
1

c=======================================================================
c     setup_conv.F
c=======================================================================

c-----------------------------------------------------------------------
c     /*   number of constraints                                      */
c-----------------------------------------------------------------------

<ncons>
0

c-----------------------------------------------------------------------
c     /*   output interval:  constraints (cons.out)                   */
c-----------------------------------------------------------------------

<iprint_cons>
1

c-----------------------------------------------------------------------
c     /*                                                              */
c     /*   parameters for constraints                                 */
c     /*                                                              */
c     /*      type 1:  bond distance   [bohr]                         */
c     /*      type 2:  bond angle      [deg]                          */
c     /*      type 3:  dihedral angle  [deg]                          */
c     /*      type 4:  bond difference [bohr]                         */
c     /*      type 5:  coordination    [no unit]                      */
c     /*                                                              */
c-----------------------------------------------------------------------

<params_cons>
DIST    5.0d+0
ANGL    5.0d-2
DIH     5.0d-3
DIFF    2.5d+0
CN      1.0d+0
DCN     1.0d+0
XYZ     5.0d+0
DXYZ    5.0d+0

c=======================================================================
c     setup_om.F, setup_omopt.F
c=======================================================================

c-----------------------------------------------------------------------
c     /*   overdamped or underdamped                                  */
c-----------------------------------------------------------------------

<equation_om>
OVERDAMPED

c-----------------------------------------------------------------------
c     /*   time increment of OM action [fs]                           */
c-----------------------------------------------------------------------

<dt_om>
0.625d0

c-----------------------------------------------------------------------
c     /*   friction constant [1/fs]                                   */
c-----------------------------------------------------------------------

<gamma_om>
0.00625d0

c=======================================================================
c     read_species.f
c=======================================================================

taken from http://www.nist.gov/pml/data/comp.cfm
a.w.: atomic weight
n.a.: not available

taken from https://en.wikipedia.org/wiki/Covalent_radius
cov : covalent radius of single bond [angstrom]

cutoff radius of intramolecular bonds defined by
rad = cov/0.52918*1.45 [bohr]

<nsymbol>
249  ! no    atomic mass      rad      cov  species
H       1    1.00782503223   0.88  H   !  0.32  1H
He      2    4.00260325413   1.26  He  !  0.46  4He
Li      3    7.0160034366    3.64  Li  !  1.33  7Li
Be      4    9.012183065     2.79  Be  !  1.02  9Be
B       5    6.9675          2.33  B   !  0.85  a.w.
C       6   12.000000000     2.06  C   !  0.75  12C
N       7   14.00307400443   1.92  N   !  0.70  14N
O       8   15.99491461957   1.73  O   !  0.63  16O
F       9   18.99840316273   1.75  F   !  0.64  19F
Ne     10   19.9924401762    1.84  Ne  !  0.67  20Ne
Na     11   22.9897692820    4.25  Na  !  1.55  23Na
Mg     12   24.3055          3.81  Mg  !  1.39  a.w.
Al     13   26.98153853      3.45  Al  !  1.26  27Al
Si     14   27.97692653465   3.18  Si  !  1.16  28Si
P      15   30.97376199842   3.04  P   !  1.11  31P
S      16   31.9720711744    2.82  S   !  1.03  32S
Cl     17   35.4515          2.71  Cl  !  0.99  a.w.
Ar     18   39.9623831237    2.63  Ar  !  0.96  40Ar
K      19   38.9637064864    5.37  K   !  1.96  39K
Ca     20   39.962590863     4.69  Ca  !  1.71  40Ca
Sc     21   44.95590828      4.06  Sc  !  1.48  45Sc
Ti     22   47.867           3.73  Ti  !  1.36  a.w.
V      23   50.94395704      3.67  V   !  1.34  51V
Cr     24   51.9961          3.34  Cr  !  1.22  a.w.
Mn     25   54.93804391      3.26  Mn  !  1.19  55Mn
Fe     26   55.845           3.18  Fe  !  1.16  a.w.
Co     27   58.93319429      3.04  Co  !  1.11  59Co
Ni     28   58.6934          3.01  Ni  !  1.10  a.w.
Cu     29   63.546           3.07  Cu  !  1.12  a.w.
Zn     30   65.38            3.23  Zn  !  1.18  a.w.
Ga     31   69.723           3.40  Ga  !  1.24  a.w.
Ge     32   72.630           3.40  Ge  !  1.24  a.w.
As     33   74.92159457      3.32  As  !  1.21  75As
Se     34   78.971           3.18  Se  !  1.16  a.w.
Br     35   79.904           3.12  Br  !  1.14  a.w.
Kr     36   83.798           3.21  Kr  !  1.17  a.w.
Rb     37   85.4678          5.75  Rb  !  2.10  a.w.
Sr     38   87.62            5.07  Sr  !  1.85  a.w.
Y      39   88.9058403       4.47  Y   !  1.63  89Y
Zr     40   89.9046977       4.22  Zr  !  1.54  90Zr
Nb     41   92.9063730       4.03  Nb  !  1.47  93Nb
Mo     42   95.95            3.78  Mo  !  1.38  a.w.
Tc     43   98.0             3.51  Tc  !  1.28  a.w.
Ru     44  101.07            3.43  Ru  !  1.25  a.w.
Rh     45  102.9054980       3.43  Rh  !  1.25  103Rh
Pd     46  106.42            3.29  Pd  !  1.20  a.w.
Ag     47  107.8682          3.51  Ag  !  1.28  a.w.
Cd     48  112.414           3.73  Cd  !  1.36  a.w.
In     49  114.903878776     3.89  In  !  1.42  115In
Sn     50  118.710           3.84  Sn  !  1.40  a.w.
Sb     51  121.760           3.84  Sb  !  1.40  a.w.
Te     52  127.60            3.73  Te  !  1.36  a.w.
I      53  126.9044719       3.64  I   !  1.33  127I
Xe     54  131.293           3.59  Xe  !  1.31  a.w.
Cs     55  132.9054519610    6.36  Cs  !  2.32  133Cs
Ba     56  137.327           5.37  Ba  !  1.96  a.w.
La     57  138.9063563       4.93  La  !  1.80  139La
Ce     58  140.116           4.47  Ce  !  1.63  a.w.
Pr     59  140.9076576       4.82  Pr  !  1.76  141Pr
Nd     60  144.242           4.77  Nd  !  1.74  a.w.
Pm     61  145.0             4.74  Pm  !  1.73  a.w.
Sm     62  150.36            4.71  Sm  !  1.72  a.w.
Eu     63  151.964           4.60  Eu  !  1.68  a.w.
Gd     64  157.25            4.63  Gd  !  1.69  a.w.
Tb     65  158.9253547       4.60  Tb  !  1.68  159Tb
Dy     66  162.500           4.58  Dy  !  1.67  a.w.
Ho     67  164.9303288       4.55  Ho  !  1.66  165Ho
Er     68  167.259           4.52  Er  !  1.65  a.w.
Tm     69  168.9342179       4.49  Tm  !  1.64  169Tm
Yb     70  173.054           4.66  Yb  !  1.70  a.w.
Lu     71  174.9407752       4.44  Lu  !  1.62  175Lu
Hf     72  178.49            4.16  Hf  !  1.52  a.w.
Ta     73  180.9479958       4.00  Ta  !  1.46  181Ta
W      74  183.84            3.75  W   !  1.37  a.w.
Re     75  186.207           3.59  Re  !  1.31  a.w.
Os     76  190.23            3.53  Os  !  1.29  a.w.
Ir     77  192.217           3.34  Ir  !  1.22  a.w.
Pt     78  195.084           3.37  Pt  !  1.23  a.w.
Au     79  196.96656879      3.40  Au  !  1.24  197Au
Hg     80  200.592           3.64  Hg  !  1.33  a.w.
Tl     81  204.3835          3.95  Tl  !  1.44  a.w.
Pb     82  207.2             3.95  Pb  !  1.44  a.w.
Bi     83  208.9803991       4.14  Bi  !  1.51  209Bi
Po     84  209.0             3.97  Po  !  1.45  a.w.
At     85  210.0             4.03  At  !  1.47  a.w.
Rn     86  222.0             3.89  Rn  !  1.42  a.w.
Fr     87  223.0197360       6.11  Fr  !  2.23  223Fr
Ra     88  226.0             5.51  Ra  !  2.01  226Ra
Ac     89  227.0277523       5.10  Ac  !  1.86  227Ac
Th     90  232.0380558       4.80  Th  !  1.75  232Th
Pa     91  231.0358842       4.63  Pa  !  1.69  231Pa
U      92  238.0507884       4.66  U   !  1.70  238U
Np     93  237.0             4.69  Np  !  1.71  a.w.
Pu     94  244.0             4.71  Pu  !  1.72  a.w.
Am     95  241.0             4.55  Am  !  1.66  n.a
Cm     96  243.0             4.55  Cm  !  1.66  n.a
Bk     97  247.0             4.55  Bk  !  1.66  n.a
Cf     98  249.0             4.60  Cf  !  1.68  n.a
Es     99  252.082980        4.52  Es  !  1.65  n.a
Fm    100  257.0951061       4.58  Fm  !  1.67  n.a
Md    101  258.0             4.74  Md  !  1.73  n.a
No    102  259.10103         4.82  No  !  1.76  n.a
Lr    103  262.10961         4.41  Lr  !  1.61  n.a
Rf    104  267.12179         4.30  Rf  !  1.57  n.a
Db    105  268.12567         4.08  Db  !  1.49  n.a
Sg    106  271.13393         3.92  Sg  !  1.43  n.a
Bh    107  272.13826         3.86  Bh  !  1.41  n.a
Hs    108  270.13429         3.67  Hs  !  1.34  n.a
Mt    109  276.15159         3.53  Mt  !  1.29  n.a
Ds    110  281.16451         3.51  Ds  !  1.28  n.a
Rg    111  280.16514         3.32  Rg  !  1.21  n.a
Cn    112  285.17712         3.34  Cn  !  1.22  n.a
Nh    113  284.17873         3.73  Nh  !  1.36  n.a
Fl    114  289.19042         3.92  Fl  !  1.43  n.a
Mc    115  288.19274         4.44  Mc  !  1.62  n.a
Lv    116  293.20449         4.80  Lv  !  1.75  n.a
Ts    117  292.20746         4.52  Ts  !  1.65  n.a
Og    118  294.21392         4.30  Og  !  1.57  n.a
1       1    1.00782503223   0.88  H   !  0.32  1H
2       2    4.00260325413   1.26  He  !  0.46  4He
3       3    7.0160034366    3.64  Li  !  1.33  7Li
4       4    9.012183065     2.79  Be  !  1.02  9Be
5       5    6.9675          2.33  B   !  0.85  a.w.
6       6   12.000000000     2.06  C   !  0.75  12C
7       7   14.00307400443   1.92  N   !  0.70  14N
8       8   15.99491461957   1.73  O   !  0.63  16O
9       9   18.99840316273   1.75  F   !  0.64  19F
10     10   19.9924401762    1.84  Ne  !  0.67  20Ne
11     11   22.9897692820    4.25  Na  !  1.55  23Na
12     12   24.3055          3.81  Mg  !  1.39  a.w.
13     13   26.98153853      3.45  Al  !  1.26  27Al
14     14   27.97692653465   3.18  Si  !  1.16  28Si
15     15   30.97376199842   3.04  P   !  1.11  31P
16     16   31.9720711744    2.82  S   !  1.03  32S
17     17   35.4515          2.71  Cl  !  0.99  a.w.
18     18   39.9623831237    2.63  Ar  !  0.96  40Ar
19     19   38.9637064864    5.37  K   !  1.96  39K
20     20   39.962590863     4.69  Ca  !  1.71  40Ca
21     21   44.95590828      4.06  Sc  !  1.48  45Sc
22     22   47.867           3.73  Ti  !  1.36  a.w.
23     23   50.94395704      3.67  V   !  1.34  51V
24     24   51.9961          3.34  Cr  !  1.22  a.w.
25     25   54.93804391      3.26  Mn  !  1.19  55Mn
26     26   55.845           3.18  Fe  !  1.16  a.w.
27     27   58.93319429      3.04  Co  !  1.11  59Co
28     28   58.6934          3.01  Ni  !  1.10  a.w.
29     29   63.546           3.07  Cu  !  1.12  a.w.
30     30   65.38            3.23  Zn  !  1.18  a.w.
31     31   69.723           3.40  Ga  !  1.24  a.w.
32     32   72.630           3.40  Ge  !  1.24  a.w.
33     33   74.92159457      3.32  As  !  1.21  75As
34     34   78.971           3.18  Se  !  1.16  a.w.
35     35   79.904           3.12  Br  !  1.14  a.w.
36     36   83.798           3.21  Kr  !  1.17  a.w.
37     37   85.4678          5.75  Rb  !  2.10  a.w.
38     38   87.62            5.07  Sr  !  1.85  a.w.
39     39   88.9058403       4.47  Y   !  1.63  89Y
40     40   89.9046977       4.22  Zr  !  1.54  90Zr
41     41   92.9063730       4.03  Nb  !  1.47  93Nb
42     42   95.95            3.78  Mo  !  1.38  a.w.
43     43   98.0             3.51  Tc  !  1.28  a.w.
44     44  101.07            3.43  Ru  !  1.25  a.w.
45     45  102.9054980       3.43  Rh  !  1.25  103Rh
46     46  106.42            3.29  Pd  !  1.20  a.w.
47     47  107.8682          3.51  Ag  !  1.28  a.w.
48     48  112.414           3.73  Cd  !  1.36  a.w.
49     49  114.903878776     3.89  In  !  1.42  115In
50     50  118.710           3.84  Sn  !  1.40  a.w.
51     51  121.760           3.84  Sb  !  1.40  a.w.
52     52  127.60            3.73  Te  !  1.36  a.w.
53     53  126.9044719       3.64  I   !  1.33  127I
54     54  131.293           3.59  Xe  !  1.31  a.w.
55     55  132.9054519610    6.36  Cs  !  2.32  133Cs
56     56  137.327           5.37  Ba  !  1.96  a.w.
57     57  138.9063563       4.93  La  !  1.80  139La
58     58  140.116           4.47  Ce  !  1.63  a.w.
59     59  140.9076576       4.82  Pr  !  1.76  141Pr
60     60  144.242           4.77  Nd  !  1.74  a.w.
61     61  145.0             4.74  Pm  !  1.73  a.w.
62     62  150.36            4.71  Sm  !  1.72  a.w.
63     63  151.964           4.60  Eu  !  1.68  a.w.
64     64  157.25            4.63  Gd  !  1.69  a.w.
65     65  158.9253547       4.60  Tb  !  1.68  159Tb
66     66  162.500           4.58  Dy  !  1.67  a.w.
67     67  164.9303288       4.55  Ho  !  1.66  165Ho
68     68  167.259           4.52  Er  !  1.65  a.w.
69     69  168.9342179       4.49  Tm  !  1.64  169Tm
70     70  173.054           4.66  Yb  !  1.70  a.w.
71     71  174.9407752       4.44  Lu  !  1.62  175Lu
72     72  178.49            4.16  Hf  !  1.52  a.w.
73     73  180.9479958       4.00  Ta  !  1.46  181Ta
74     74  183.84            3.75  W   !  1.37  a.w.
75     75  186.207           3.59  Re  !  1.31  a.w.
76     76  190.23            3.53  Os  !  1.29  a.w.
77     77  192.217           3.34  Ir  !  1.22  a.w.
78     78  195.084           3.37  Pt  !  1.23  a.w.
79     79  196.96656879      3.40  Au  !  1.24  197Au
80     80  200.592           3.64  Hg  !  1.33  a.w.
81     81  204.3835          3.95  Tl  !  1.44  a.w.
82     82  207.2             3.95  Pb  !  1.44  a.w.
83     83  208.9803991       4.14  Bi  !  1.51  209Bi
84     84  209.0             3.97  Po  !  1.45  a.w.
85     85  210.0             4.03  At  !  1.47  a.w.
86     86  222.0             3.89  Rn  !  1.42  a.w.
87     87  223.0197360       6.11  Fr  !  2.23  223Fr
88     88  226.0             5.51  Ra  !  2.01  226Ra
89     89  227.0277523       5.10  Ac  !  1.86  227Ac
90     90  232.0380558       4.80  Th  !  1.75  232Th
91     91  231.0358842       4.63  Pa  !  1.69  231Pa
92     92  238.0507884       4.66  U   !  1.70  238U
93     93  237.0             4.69  Np  !  1.71  a.w.
94     94  244.0             4.71  Pu  !  1.72  a.w.
95     95  241.0             4.55  Am  !  1.66  n.a
96     96  243.0             4.55  Cm  !  1.66  n.a
97     97  247.0             4.55  Bk  !  1.66  n.a
98     98  249.0             4.60  Cf  !  1.68  n.a
99     99  252.082980        4.52  Es  !  1.65  n.a
100   100  257.0951061       4.58  Fm  !  1.67  n.a
101   101  258.0             4.74  Md  !  1.73  n.a
102   102  259.10103         4.82  No  !  1.76  n.a
103   103  262.10961         4.41  Lr  !  1.61  n.a
104   104  267.12179         4.30  Rf  !  1.57  n.a
105   105  268.12567         4.08  Db  !  1.49  n.a
106   106  271.13393         3.92  Sg  !  1.43  n.a
107   107  272.13826         3.86  Bh  !  1.41  n.a
108   108  270.13429         3.67  Hs  !  1.34  n.a
109   109  276.15159         3.53  Mt  !  1.29  n.a
110   110  281.16451         3.51  Ds  !  1.28  n.a
111   111  280.16514         3.32  Rg  !  1.21  n.a
112   112  285.17712         3.34  Cn  !  1.22  n.a
113   113  284.17873         3.73  Nh  !  1.36  n.a
114   114  289.19042         3.92  Fl  !  1.43  n.a
115   115  288.19274         4.44  Mc  !  1.62  n.a
116   116  293.20449         4.80  Lv  !  1.75  n.a
117   117  292.20746         4.52  Ts  !  1.65  n.a
118   118  294.21392         4.30  Og  !  1.57  n.a
D       1    2.01410177812   0.88  H   !  0.32  2H
T       1    3.0160492779    0.88  H   !  0.32  3H
Mu      1    0.1134289257    0.88  H   !  0.32  muon
HW      1    1.00782503223   0.88  H   !  0.32  TIP3P hydrogen
OW      8   15.99491461957   1.73  O   !  0.63  TIP3P oxygen
M       1    1.00782503223   1.73  0   !  0.63  dummy atom: TIP4P etc.
L       1    1.00782503223   0.00  0   !  0.00  dummy atom: link atom etc.
X       1    1.00782503223   0.00  0   !  0.00  dummy atom: rotor etc.
e       0    0.00054857989   0.00  0   !  0.00  electron
E       0    3.5977449e+51   0.00  0   !  0.00  planet earth
H2      1    2.01565006446   0.88  0   !  0.32  1H molecule
D2      1    4.02820355624   0.88  0   !  0.32  2H molecule
T2      1    6.0320985558    0.88  0   !  0.32  3H molecule

c=======================================================================
c     setup_afed.f
c=======================================================================

c-----------------------------------------------------------------------
c     /*   afed_type = GRAD:    free energy gradient                  */
c     /*             = TEST:    convergence test                      */
c     /*             = DESCENT: descent trajectory                    */
c     /*             = ASCENT:  ascent trajectory                     */
c     /*             = AUTO:    automated search                      */
c     /*             = TAMD:    temperature accelerated MD            */
c     /*             = LOGMFD:  logarithmatic mean force dynamics     */
c-----------------------------------------------------------------------

<afed_type>
GRAD

c-----------------------------------------------------------------------
c     /*   algo_ascent_afed = GAD:     gentlest ascent                */
c     /*                    = EVF:     eigenvector following          */
c-----------------------------------------------------------------------

<algo_ascent_afed>
GAD

c-----------------------------------------------------------------------
c     /*   maximum number of AFED iterations (AFED steps)             */
c-----------------------------------------------------------------------

<niter_afed>
200

c-----------------------------------------------------------------------
c     /*   number of steps in preliminary MD runs                     */
c-----------------------------------------------------------------------

<nstep_pre_afed>
1000

c-----------------------------------------------------------------------
c     /*   number of steps in productive MD runs                      */
c-----------------------------------------------------------------------

<nstep_pro_afed>
2000

c-----------------------------------------------------------------------
c     /*   maximum step size in ascent trajectories                   */
c-----------------------------------------------------------------------

<dt_ascent_afed>
1.d0

c-----------------------------------------------------------------------
c     /*   maximum step size in descent trajectories                  */
c-----------------------------------------------------------------------

<dt_descent_afed>
0.5d0

c-----------------------------------------------------------------------
c     /*   converged step size in ascent and descent trajectories     */
c-----------------------------------------------------------------------

<dt_conv_afed>
0.05d0

c-----------------------------------------------------------------------
c     /*   damping factor of step size when converging                */
c-----------------------------------------------------------------------

<dt_damp_afed>
0.7d0

c-----------------------------------------------------------------------
c     /*   parameter gamma in ascent trajectory                       */
c-----------------------------------------------------------------------

<gamma_ascent_afed>
0.0025d0

c-----------------------------------------------------------------------
c     /*   interval of explicit hessian computation in gad            */
c-----------------------------------------------------------------------

<niter_refresh_afed>
20

c-----------------------------------------------------------------------
c     /*   iterations switching from gad to evf                       */
c-----------------------------------------------------------------------

<niter_gad2evf_afed>
80

c-----------------------------------------------------------------------
c     /*   maximum free energy                                        */
c-----------------------------------------------------------------------

<fenergy_max_afed>
0.16d0

c-----------------------------------------------------------------------
c     /*   radius of landmark in automated search                      */
c-----------------------------------------------------------------------

<radius_auto_afed>
2.5d0

c-----------------------------------------------------------------------
c     /*   maximum number of shots from minimum in automated search   */
c-----------------------------------------------------------------------

<nshot_auto_afed>
20

c-----------------------------------------------------------------------
c     /*   maximum number of consecutive misses in automated search   */
c-----------------------------------------------------------------------

<nmiss_auto_afed>
10

c-----------------------------------------------------------------------
c     /*   parameter set of each cv used in AFED                      */
c-----------------------------------------------------------------------

<params_afed>
DIST    0.08d0    2.0d0   10.0d0
ANGL    3.00d0    0.0d0  180.0d0
DIH     5.00d0 -180.0d0  180.0d0
DIFF    0.08d0   -4.0d0    4.0d0
CN      0.04d0    0.0d0    4.0d0
DCN     0.04d0   -2.0d0    2.0d0
XYZ     0.08d0    2.0d0   10.0d0
DXYZ    0.08d0    2.0d0   10.0d0

c-----------------------------------------------------------------------
c     /*  bead sampling for ascent: analytical or numerical           */
c-----------------------------------------------------------------------

<ascent_sampling_afed>
NUMERICAL

c-----------------------------------------------------------------------
c     /*   finite difference parameter for numerical hessian          */
c-----------------------------------------------------------------------

<fdiff_sampling_afed>
5.d0

c-----------------------------------------------------------------------
c     /*   print interval in convergence test                         */
c-----------------------------------------------------------------------

<iprint_test_afed>
100

c-----------------------------------------------------------------------
c     /*   print interval of snapshots in xyz format                  */
c-----------------------------------------------------------------------

<iprint_xyz_afed>
1

c-----------------------------------------------------------------------
c     /*   tamd type                                                  */
c-----------------------------------------------------------------------

<tamd_type>
NVT

c-----------------------------------------------------------------------
c     /*   step size in tamd                                          */
c-----------------------------------------------------------------------

<dt_tamd>
1.d0

c-----------------------------------------------------------------------
c     /*   temperature in tamd                                        */
c-----------------------------------------------------------------------

<temperature_tamd>
3000.d0

c-----------------------------------------------------------------------
c     /*   initial free energy in tamd                                */
c-----------------------------------------------------------------------

<fenergy_ini_tamd>
0.d0

c-----------------------------------------------------------------------
c     /*   logmfd type                                                */
c-----------------------------------------------------------------------

<logmfd_type>
NVE

c-----------------------------------------------------------------------
c     /*   step size in logmfd                                        */
c-----------------------------------------------------------------------

<dt_logmfd>
1.d0

c-----------------------------------------------------------------------
c     /*   alpha in logmfd                                            */
c-----------------------------------------------------------------------

<alpha_logmfd>
4.d0

c-----------------------------------------------------------------------
c     /*   gamma in logmfd                                            */
c-----------------------------------------------------------------------

<gamma_logmfd>
-1.d0

c-----------------------------------------------------------------------
c     /*   initial free energy in logmfd                              */
c-----------------------------------------------------------------------

<fenergy_ini_logmfd>
0.005d0

c-----------------------------------------------------------------------
c     /*   parameter for thermostat mass in nvt-tamd and logmfd       */
c-----------------------------------------------------------------------

<niter_bath_afed>
100

c-----------------------------------------------------------------------
c     /*   parameter for eigenvalue calculations                      */
c-----------------------------------------------------------------------

<ioption_eigen_afed>
1

c-----------------------------------------------------------------------
c     /*   molecular dynamics cycle for productive runs               */
c-----------------------------------------------------------------------

<mdcycle_pro_afed>
NVE

c-----------------------------------------------------------------------
c     /*   initial cv position and velocity                           */
c-----------------------------------------------------------------------

<start_afed>
AUTOMATIC

c-----------------------------------------------------------------------
c     /*   initial cv position and velocity in logmfd                 */
c-----------------------------------------------------------------------

<start_therm_afed>
MANUAL
0.0 0.0

c-----------------------------------------------------------------------
c     /*   initial mass position and velocity in logmfd               */
c-----------------------------------------------------------------------

<mass_afed>
AUTOMATIC

c-----------------------------------------------------------------------
c     /*   1: average, or 2: weighted average in logmfd and tamd      */
c-----------------------------------------------------------------------

<ioption_afed>
1

c=======================================================================
c     force_user.f
c=======================================================================

c-----------------------------------------------------------------------
c     /*   execution command                                          */
c-----------------------------------------------------------------------

<user_command>
not_available

c-----------------------------------------------------------------------
c     /*   input file (atomic positions)                              */
c-----------------------------------------------------------------------

<user_input_file>
not_available

c-----------------------------------------------------------------------
c     /*   output file (potential, forces, virial)                    */
c-----------------------------------------------------------------------

<user_output_file>
not_available

c=======================================================================
c     gadcycle.f
c=======================================================================

c-----------------------------------------------------------------------
c     /*   GAD gamma value in atomic unit                             */
c-----------------------------------------------------------------------

<gamma_gad>
0.1d0

c-----------------------------------------------------------------------
c     /*   GAD converged step size                                    */
c-----------------------------------------------------------------------

<dt_conv_gad>
1.d-5

c=======================================================================
c     scancycle.F
c=======================================================================

c-----------------------------------------------------------------------
c     /*   file name of post process:  name.001.sh, ...               */
c-----------------------------------------------------------------------

<scan_exe_shell>
" "

c=======================================================================
c     setup_multi.f
c=======================================================================

c-----------------------------------------------------------------------
c     /*   inner cycles for multiple time scale method                */
c-----------------------------------------------------------------------

<nmulti>
100

c=======================================================================
c     init_molcomp.f
c=======================================================================

c-----------------------------------------------------------------------
c     /*   number of molecular components                             */
c-----------------------------------------------------------------------

<components>
0

c-----------------------------------------------------------------------
c     /*   number of molecules                                        */
c-----------------------------------------------------------------------

<molecules>
0

c=======================================================================
c     setup_tass.f
c=======================================================================

c-----------------------------------------------------------------------
c     /*   parameter set of each cv used in TASS                      */
c-----------------------------------------------------------------------

<nref_tass>
100

c-----------------------------------------------------------------------
c   /*   print interval:  free energy reconstruction                  */
c-----------------------------------------------------------------------

<iprint_rec_tass>
100

c-----------------------------------------------------------------------
c   /*   print interval:  energy components                           */
c-----------------------------------------------------------------------

<iprint_tass>
1

c-----------------------------------------------------------------------
c   /*   print interval:  cv trajectory                               */
c-----------------------------------------------------------------------

<iprint_cv_tass>
1

c-----------------------------------------------------------------------
c   /*   tamd temperature in tass (= temperature if negative)         */
c-----------------------------------------------------------------------

<temp_tamd_tass>
-1.d0

c-----------------------------------------------------------------------
c   /*   cv dimension of reconstruction (= ntass if negative)         */
c-----------------------------------------------------------------------

<ntass_rec>
-1

c=======================================================================
c     setup_polymers.f
c=======================================================================

c-----------------------------------------------------------------------
c     /*                                                              */
c     /*   Number of polymer images                                   */
c     /*                                                              */
c-----------------------------------------------------------------------

<npoly>
16

c-----------------------------------------------------------------------
c     /*                                                              */
c     /*   Parallelization number for polymers                        */
c     /*                                                              */
c-----------------------------------------------------------------------

<np_poly>
1

c-----------------------------------------------------------------------
c     /*                                                              */
c     /*   The step size for polymer moves                            */
c     /*                                                              */
c-----------------------------------------------------------------------

<dt_poly>
0.d0

c-----------------------------------------------------------------------
c     /*                                                              */
c     /*   End polymers                                               */
c     /*                                                              */
c     /*      ends_poly = FIXED:  both ends are fixed.                */
c     /*      ends_poly = FREE:   both ends are free to move.         */
c     /*                                                              */
c-----------------------------------------------------------------------

<ends_poly>
FIXED

c-----------------------------------------------------------------------
c     /*                                                              */
c     /*   Print interval of mean forces                              */
c     /*                                                              */
c-----------------------------------------------------------------------

<iprint_poly>
10

c-----------------------------------------------------------------------
c     /*                                                              */
c     /*   Number of cycles for polymer moves                         */
c     /*                                                              */
c-----------------------------------------------------------------------

<ncycle_poly>
1

c-----------------------------------------------------------------------
c     /*                                                              */
c     /*   Guess of polymers                                          */
c     /*                                                              */
c     /*      guess_poly = LINE:   linear interpolation.              */
c     /*      guess_poly = SPLINE: spline interpolation.              */
c     /*                                                              */
c-----------------------------------------------------------------------

<guess_poly>
LINE

c-----------------------------------------------------------------------
c     /*                                                              */
c     /*   Projection of mean forces                                  */
c     /*                                                              */
c     /*      projcmf_poly = OFF:  apply.                             */
c     /*      projcmf_poly = ON:   do not apply.                      */
c     /*                                                              */
c-----------------------------------------------------------------------

<projcmf_poly>
OFF

c-----------------------------------------------------------------------
c     /*                                                              */
c     /*   Number of grids for interpolation                          */
c     /*                                                              */
c-----------------------------------------------------------------------

<ngrid_poly>
10

c=======================================================================
c     force_aenet.f
c=======================================================================

c-----------------------------------------------------------------------
c     /*                                                              */
c     /*   Atomic types for AENET                                     */
c     /*                                                              */
c-----------------------------------------------------------------------

<ntype_aenet>
0

c-----------------------------------------------------------------------
c     /*                                                              */
c     /*   Generate input for AENET                                   */
c     /*                                                              */
c-----------------------------------------------------------------------

<generate_aenet>
not available

c-----------------------------------------------------------------------
c     /*                                                              */
c     /*   Train input for AENET                                      */
c     /*                                                              */
c-----------------------------------------------------------------------

<train_aenet>
not available

c-----------------------------------------------------------------------
c     /*                                                              */
c     /*   xsf print interval for AENET                               */
c     /*                                                              */
c-----------------------------------------------------------------------

<iprint_xsf_aenet>
-1

c-----------------------------------------------------------------------
c     /*                                                              */
c     /*   generate/train step interval for AENET                     */
c     /*                                                              */
c-----------------------------------------------------------------------

<istep_train_aenet>
-1

c-----------------------------------------------------------------------
c     /*                                                              */
c     /*   save step interval for the trained AENET potentials        */
c     /*                                                              */
c-----------------------------------------------------------------------

<istep_save_aenet>
-1

c-----------------------------------------------------------------------
c     /*                                                              */
c     /*   last generate/train step for AENET                         */
c     /*                                                              */
c-----------------------------------------------------------------------

<lstep_train_aenet>
99999999

c-----------------------------------------------------------------------
c     /*                                                              */
c     /*   minimum number of xsf files to train AENET                 */
c     /*                                                              */
c-----------------------------------------------------------------------

<minxsf_train_aenet>
300

c-----------------------------------------------------------------------
c     /*                                                              */
c     /*   option of xsf files - 0: accepted, 1: accepted+rejected    */
c     /*                                                              */
c-----------------------------------------------------------------------

<ioption_xsf_aenet>
1

c-----------------------------------------------------------------------
c     /*                                                              */
c     /*   scratch directory of trained networks for AENET            */
c     /*                                                              */
c-----------------------------------------------------------------------

<dir_train_aenet>
"trained_networks"

c-----------------------------------------------------------------------
c     /*                                                              */
c     /*   directory of the periodically saved trained AENET networks */
c     /*                                                              */
c-----------------------------------------------------------------------

<dir_save_aenet>
"saved_networks"

c-----------------------------------------------------------------------
c     /*                                                              */
c     /*   delay time for hard disk access of AENET                   */
c     /*                                                              */
c-----------------------------------------------------------------------

<delay_aenet>
"0.25"

c=======================================================================
c     print_minfo.f
c=======================================================================

c-----------------------------------------------------------------------
c     /*                                                              */
c     /*   Should we output minfo files with ES information           */
c     /*   Only used in SCAN, STATIC and NMA methods                  */
c     /*                                                              */
c     /*   iprint_minfo = -1  : Do not print                          */
c     /*   iprint_minfo != -1 : Print Minfor files                    */
c     /*                                                              */
c-----------------------------------------------------------------------

<iprint_minfo>
-1

c=======================================================================
c     force_qe.f
c=======================================================================

c-----------------------------------------------------------------------
c     /*   frequency of quantum espresso output                       */
c-----------------------------------------------------------------------

<qe_output>
0   1

c-----------------------------------------------------------------------
c     /*   filename of quantum espresso output                        */
c-----------------------------------------------------------------------

<qe_input_file_name>
qe.dat

c=======================================================================
c     judge_ax_hmc.f, judge_ax_rehmc.f
c=======================================================================

c-----------------------------------------------------------------------
c     /*   step interval of atomic exchange (-1: no exchange)         */
c-----------------------------------------------------------------------

<istep_ax_hmc>
-1

c-----------------------------------------------------------------------
c     /*   number of kinds for atomic exchange                        */
c-----------------------------------------------------------------------

<nkind_ax_hmc>
0

c=======================================================================
c     predict_aenet_MPI.f
c=======================================================================

c-----------------------------------------------------------------------
c     /*   neighbor list skin parameter for aenet (angstrom)          */
c-----------------------------------------------------------------------

<skin_aenet>
2.0

c-----------------------------------------------------------------------
c     /*   print interval of heat flux trajectory for aenet           */
c-----------------------------------------------------------------------

<iprint_hfx_aenet>
-1

c=======================================================================
c     nma.f
c=======================================================================

c-----------------------------------------------------------------------
c     /*   print steps of normal modes in xyz format                  */
c-----------------------------------------------------------------------

<nstep_modes>
0

c=======================================================================
c     force_phase0_MPI.F
c=======================================================================

<phase0_proc>
-1  1  1

c=======================================================================
c     force_xtb.F, force_xtb_MPI.F
c=======================================================================

<xtb_exe_command>
"xtb xtb.xyz --chrg 0 --uhf 0 --grad --vparam xtb.dat > xtb.out"

c=======================================================================
c     pibcmdcycle.F
c=======================================================================
c-----------------------------------------------------------------------
c     BCMD integrator: RESPA, GILLESPIE, PLATEN
c-----------------------------------------------------------------------

<integrator_bcmd>
RESPA

c-----------------------------------------------------------------------
c     scale_bcmd: scaling factor for BCMD decoherence time
c-----------------------------------------------------------------------

<scale_bcmd>
1.d0

c=======================================================================
c     force_n2p2_MPI.f
c=======================================================================

c-----------------------------------------------------------------------
c     /*                                                              */
c     /*   xsf print interval for N2P2                                */
c     /*                                                              */
c-----------------------------------------------------------------------

<iprint_xsf_n2p2>
-1

c-----------------------------------------------------------------------
c     /*   generate/train step interval for N2P2                      */
c-----------------------------------------------------------------------

<istep_train_n2p2>
-1

c-----------------------------------------------------------------------
c     /*   save step interval for the trained N2P2 potentials         */
c-----------------------------------------------------------------------

<istep_save_n2p2>
-1

c-----------------------------------------------------------------------
c     /*   last generate/train step for N2P2                          */
c-----------------------------------------------------------------------

<lstep_train_n2p2>
99999999

c-----------------------------------------------------------------------
c     /*   minimum number of xsf files to train N2P2                  */
c-----------------------------------------------------------------------

<minxsf_train_n2p2>
300

c-----------------------------------------------------------------------
c     /*   option of xsf files - 0: accepted, 1: accepted+rejected    */
c-----------------------------------------------------------------------

<ioption_xsf_n2p2>
1

c-----------------------------------------------------------------------
c     /*   directory of the periodically saved trained N2P2 networks  */
c-----------------------------------------------------------------------

<dir_save_n2p2>
"saved_networks"


c-----------------------------------------------------------------------
c     /* Energy unit used in the n2p2 MLP, currently supports         */
c     /* HARTREE, EV, or a real(8) value used to convert from HATREE  */
c-----------------------------------------------------------------------

<n2p2_en_unit>
HARTREE

c-----------------------------------------------------------------------
c     /* Length unit used in the n2p2 MLP, currently supports         */
c     /* BOHR, AA, or a real(8) value used to convert from BOHR       */
c-----------------------------------------------------------------------

<n2p2_len_unit>
BOHR

c=======================================================================
c     predict_n2p2_MPI.f
c=======================================================================

c-----------------------------------------------------------------------
c     /*   print interval of heat flux trajectory for N2P2            */
c-----------------------------------------------------------------------

<iprint_hfx_n2p2>
-1

c=======================================================================
c     trpmdcycle.F
c=======================================================================
c-----------------------------------------------------------------------
c     Underdamped LE integrator for TRPMD: LEIMKUHLER, VANDEN-EIJNDEN
c-----------------------------------------------------------------------

<integrator_trpmd>
VANDEN-EIJNDEN

c-----------------------------------------------------------------------
c     scale_trpmd: scaling factor for RPMD friction parameter (lambda)
c-----------------------------------------------------------------------

<scale_trpmd>
0.5d0

c=======================================================================
c     force_libnnp_MPI.F90
c=======================================================================
c-----------------------------------------------------------------------
c     /*   total charge                                               */
c-----------------------------------------------------------------------

<charge_libnnp>
0.d0

c-----------------------------------------------------------------------
c     /*   calculate dipole moment surface: 0 no, 1 yes               */
c-----------------------------------------------------------------------

<ioption_dms_libnnp>
1

c-----------------------------------------------------------------------
c     /*   number of rare gas atoms (always at the end)               */
c-----------------------------------------------------------------------

<natom_ip_libnnp>
0

c-----------------------------------------------------------------------
c     /*   input filename for potential energy surface                */
c-----------------------------------------------------------------------

<file_pes_libnnp>
"NN-PES/input.nn"

c-----------------------------------------------------------------------
c     /*   input filename for dipole moment surface                   */
c-----------------------------------------------------------------------

<file_dms_libnnp>
"NN-DMS/input.nn"

c-----------------------------------------------------------------------
c     /*   input filename for interaction potential with rare gases   */
c-----------------------------------------------------------------------

<file_ip_libnnp>
"NN-IP/input.nn"

c=======================================================================
c     neighbor_list_XMPI.F90
c=======================================================================

c-----------------------------------------------------------------------
c     /* Skin for the n2p2 neighbour list in BOHR                     */
c-----------------------------------------------------------------------

<neighbor_list_skin>
1.0

c=======================================================================
c     pimdcycle_qtst_MPI.F90
c=======================================================================

<iatom_qtst>
0

